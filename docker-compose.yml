version: "3.9"

services:
  db:
    image: postgres:13.1
    env_file:
      - ../golang-api-secrets/postgres.env
    ports:
      - 5432:5432
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - golang-api-net

  pgadmin:
    image: dpage/pgadmin4
    env_file:
      - ../golang-api-secrets/pgadmin.env
    ports:
      - 8000:80
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - golang-api-net

  swaggereditor:
    image: swaggerapi/swagger-editor
    ports:
      - 8001:8080
    networks:
      - golang-api-net

  api:
    build: ./api/
    image: golang-api
    restart: on-failure
    env_file:
      - ../golang-api-secrets/api.env
    ports:
      - 8002:8080
    networks:
      - golang-api-net
    depends_on:
      - db

  minio:
    image: minio/minio
    command: server /data
    env_file:
      - ../golang-api-secrets/minio.env
    ports:
      - 9000:9000
    volumes:
      - minio-data:/data
    networks:
      - golang-api-net

  loki:
    image: grafana/loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yml:/etc/loki/config.yml
    command: -config.file=/etc/loki/config.yml
    networks:
      - golang-api-net
    depends_on:
      - minio

  promtail:
    image: grafana/promtail
    volumes:
      - promtail-data:/tmp/promtail
      - /var/lib/docker/containers:/var/lib/docker/containers
      - ./promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - golang-api-net
    depends_on:
      - loki

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - golang-api-net

networks:
  golang-api-net:

volumes:
  db-data:
  pgadmin-data:
  minio-data:
  grafana-data:
  promtail-data:
