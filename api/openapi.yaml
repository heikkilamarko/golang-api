openapi: 3.0.3
info:
  title: Products API
  description: |
    Implements the following CRUD operations:
    - Browse products
    - Get single product
    - Create new product
    - Update existing product
    - Delete product
    - Get product price range
  version: v1
  contact:
    name: Contact
    email: example@example.com
servers:
  - url: "http://localhost:8000"
    description: localhost
security:
  - ApiKeyAuth: []
tags:
  - name: /products queries
    description: Query operations
  - name: /products commands
    description: Command operations
paths:
  /products:
    get:
      summary: Browse products
      description: Browse products descriptions
      tags:
        - /products queries
      parameters:
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/Products"
        "400":
          $ref: "#/components/responses/Error"
        "401":
          $ref: "#/components/responses/Error"
        "500":
          $ref: "#/components/responses/Error"
    post:
      summary: Creates product by id
      description: Creates a product
      tags:
        - /products commands
      requestBody:
        $ref: "#/components/requestBodies/NewProduct"
      responses:
        "201":
          $ref: "#/components/responses/Product"
        "400":
          $ref: "#/components/responses/Error"
        "401":
          $ref: "#/components/responses/Error"
        "500":
          $ref: "#/components/responses/Error"
  /products/{id}:
    get:
      summary: Get product by id
      description: Gets a product
      tags:
        - /products queries
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          $ref: "#/components/responses/Product"
        "400":
          $ref: "#/components/responses/Error"
        "401":
          $ref: "#/components/responses/Error"
        "404":
          $ref: "#/components/responses/Error"
        "500":
          $ref: "#/components/responses/Error"
    put:
      summary: Update product by id
      description: Updates a product
      tags:
        - /products commands
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        $ref: "#/components/requestBodies/UpdatedProduct"
      responses:
        "200":
          $ref: "#/components/responses/Product"
        "400":
          $ref: "#/components/responses/Error"
        "401":
          $ref: "#/components/responses/Error"
        "404":
          $ref: "#/components/responses/Error"
        "500":
          $ref: "#/components/responses/Error"
    delete:
      summary: Delete product by id
      description: Deletes a product
      tags:
        - /products commands
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          description: The product was deleted successfully.
        "400":
          $ref: "#/components/responses/Error"
        "401":
          $ref: "#/components/responses/Error"
        "404":
          $ref: "#/components/responses/Error"
        "500":
          $ref: "#/components/responses/Error"
  /products/pricerange:
    get:
      summary: Get product price range
      description: Get product price range
      tags:
        - /products queries
      responses:
        "200":
          $ref: "#/components/responses/PriceRange"
        "401":
          $ref: "#/components/responses/Error"
        "500":
          $ref: "#/components/responses/Error"
components:
  parameters:
    id:
      name: id
      in: path
      description: Product id
      required: true
      schema:
        type: integer
      example: 1
    offset:
      name: offset
      in: query
      description: Pagination offset
      schema:
        type: integer
      example: 0
    limit:
      name: limit
      in: query
      description: Pagination limit
      schema:
        type: integer
      example: 10
  requestBodies:
    Product:
      description: Product
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Product"
    NewProduct:
      description: New Product
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NewProduct"
    UpdatedProduct:
      description: Updated Product
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdatedProduct"
  responses:
    Products:
      description: Products
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                type: object
                description: Metadata
                properties:
                  offset:
                    type: integer
                    description: Pagination offset
                    example: 0
                  limit:
                    type: integer
                    description: Pagination limit
                    example: 10
              data:
                type: array
                description: Data
                items:
                  $ref: "#/components/schemas/Product"
    Product:
      description: Product
      content:
        application/json:
          schema:
            type: object
            description: Data
            properties:
              data:
                $ref: "#/components/schemas/Product"
    PriceRange:
      description: Price range
      content:
        application/json:
          schema:
            type: object
            description: Data
            properties:
              data:
                $ref: "#/components/schemas/PriceRange"
    Error:
      description: Error response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  schemas:
    Product:
      type: object
      description: Product data
      required:
        - id
        - name
        - price
        - created_at
      properties:
        id:
          type: integer
          description: Product ID
          example: 1
        name:
          type: string
          description: Product name
          example: Toyota Corolla
        description:
          type: string
          description: Product description
          example: Gray Toyota Corolla from year 2006.
        price:
          type: number
          description: Product price
          example: 10000
        comment:
          type: string
          description: Free text comment
          example: The most reliable car ever.
        created_at:
          type: string
          description: Creation timestamp
          example: "2021-03-25T17:41:50Z"
        updated_at:
          type: string
          description: Update timestamp
          example: "2021-03-25T17:41:50Z"
    NewProduct:
      type: object
      description: Product data
      required:
        - name
        - price
      properties:
        name:
          type: string
          description: Product name
          example: Toyota Corolla
        description:
          type: string
          description: Product name
          example: Gray Toyota Corolla from year 2006.
        price:
          type: number
          description: Product price
          example: 10000
        comment:
          type: string
          description: Free text comment
          example: The most reliable car ever.
    UpdatedProduct:
      type: object
      description: Product data
      required:
        - id
      properties:
        id:
          type: integer
          description: Product ID
          example: 1
        name:
          type: string
          description: Product name
          example: Toyota Corolla
        description:
          type: string
          description: Product name
          example: Gray Toyota Corolla from year 2006.
        price:
          type: number
          description: Product price
          example: 10000
        comment:
          type: string
          description: Free text comment
          example: The most reliable car ever.
    PriceRange:
      type: object
      description: Price range response
      required:
        - min_price
        - max_price
      properties:
        min_price:
          type: number
          description: Min price
          example: 10000
        max_price:
          type: number
          description: Max price
          example: 10000
    Error:
      type: object
      description: Error response
      required:
        - error
      properties:
        error:
          type: object
          description: Error payload
          required:
            - code
          properties:
            code:
              type: string
              description: Error code
              example: <error_code>
            details:
              type: object
              description: Error details
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Api-Key
