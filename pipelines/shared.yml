trigger:
  - master

resources:
  - repo: self

stages:
  # STAGE: Plan infra
  - stage: plan_infra
    displayName: Plan infra
    pool:
      vmImage: ubuntu-latest
    variables:
      - group: goapi-shared
      - group: goapi-tf
    jobs:
      - job: terraform
        displayName: Terraform plan
        steps:
          - publish: $(System.DefaultWorkingDirectory)/infra/shared
            artifact: infra-shared
            displayName: Publish infra-shared artifact
          - template: templates/create-backend-tf-file-step.yml
            parameters:
              key: terraform.tfstate
              working_directory: $(System.DefaultWorkingDirectory)/infra/shared
          - script: |
              cat << EOF >> ./terraform.tfvars
              name            = "$(name)"
              suffix          = "$(suffix)"
              EOF
            displayName: Create terraform.tfvars file
            workingDirectory: $(System.DefaultWorkingDirectory)/infra/shared
          - script: |
              terraform init && terraform plan
            displayName: Terraform plan
            workingDirectory: $(System.DefaultWorkingDirectory)/infra/shared
            env:
              ARM_CLIENT_ID: $(tf_client_id)
              ARM_CLIENT_SECRET: $(tf_client_secret)
              ARM_SUBSCRIPTION_ID: $(tf_subscription_id)
              ARM_TENANT_ID: $(tf_tenant_id)

  # STAGE: Deploy infra
  - stage: deploy_infra
    displayName: Deploy infra
    pool:
      vmImage: ubuntu-latest
    variables:
      - group: goapi-shared
      - group: goapi-tf
    jobs:
      - deployment: terraform
        displayName: Terraform apply
        environment: goapi-shared
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: infra-shared
                  displayName: Download infra-shared artifact
                - template: templates/create-backend-tf-file-step.yml
                  parameters:
                    key: terraform.tfstate
                    working_directory: $(Pipeline.Workspace)/infra-shared
                - script: |
                    cat << EOF >> ./terraform.tfvars
                    name            = "$(name)"
                    suffix          = "$(suffix)"
                    EOF
                  displayName: Create terraform.tfvars file
                  workingDirectory: $(Pipeline.Workspace)/infra-shared
                - script: |
                    terraform init && terraform apply -auto-approve
                  displayName: Terraform apply
                  workingDirectory: $(Pipeline.Workspace)/infra-shared
                  env:
                    ARM_CLIENT_ID: $(tf_client_id)
                    ARM_CLIENT_SECRET: $(tf_client_secret)
                    ARM_SUBSCRIPTION_ID: $(tf_subscription_id)
                    ARM_TENANT_ID: $(tf_tenant_id)
